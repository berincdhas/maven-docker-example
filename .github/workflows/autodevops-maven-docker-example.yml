name: autodevops-maven-docker-example

on:
  workflow_dispatch:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

concurrency:
  group: autodevops-maven-docker-example-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build-test-analyze:
    name: Checkout, Build, Test, Analyze
    runs-on: ubuntu-latest
    permissions:
      contents: read
    timeout-minutes: 20
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: Run tests
        run: mvn test

      - name: Code Analysis
        run: mvn verify

  docker-build-scan-push:
    name: Docker Build, Scan, and Push
    needs: build-test-analyze
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    timeout-minutes: 30
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

      - name: Scan image for vulnerabilities
        uses: aquasecurity/trivy-action@v0.22.0
        with:
          image-ref: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true

  cleanup-notification:
    name: Cleanup & Notification
    needs: [docker-build-scan-push]
    runs-on: ubuntu-latest
    if: always()
    permissions:
      contents: read
    timeout-minutes: 10
    steps:
      - name: Send pipeline status email
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: ${{ secrets.NOTIFY_EMAIL_SERVER }}
          server_port: ${{ secrets.NOTIFY_EMAIL_PORT }}
          username: ${{ secrets.NOTIFY_EMAIL_USERNAME }}
          password: ${{ secrets.NOTIFY_EMAIL_PASSWORD }}
          to: ${{ secrets.NOTIFY_EMAIL_TO }}
          from: ${{ secrets.NOTIFY_EMAIL_FROM }}
          subject: GitHub Actions Pipeline Status for ${{ github.repository }}
          body: |
            The workflow "${{ github.workflow }}" has completed.
            Status: ${{ job.status }}
            Run: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}