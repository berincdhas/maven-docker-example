name: autodevops-maven-docker-example

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:

concurrency:
  group: autodevops-maven-docker-example-${{ github.ref }}
  cancel-in-progress: true

jobs:
  checkout-deps-code-analysis:
    name: Checkout, Dependency Management & Code Analysis
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
    timeout-minutes: 15
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Dependency installation (Maven)
        run: mvn dependency:resolve

      - name: Check for Makefile and deps target
        id: makefile-check
        run: |
          if [ -f Makefile ] && grep -q "^deps:" Makefile; then
            echo "makefile_has_deps=true" >> $GITHUB_OUTPUT
          else
            echo "makefile_has_deps=false" >> $GITHUB_OUTPUT
          fi

      - name: Dependency installation (Make)
        if: steps.makefile-check.outputs.makefile_has_deps == 'true'
        run: make deps

      - name: Static code analysis - SonarQube
        uses: sonarsource/sonarcloud-github-action@v2.1.0
        with:
          args: >
            -Dsonar.projectKey=${{ github.repository }}
            -Dsonar.organization=${{ github.repository_owner }}
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Dependency scan - Dependabot
        if: github.event_name == 'pull_request' && github.actor == 'dependabot[bot]'
        run: echo "Dependabot scan active"

  build-test:
    name: Build & Test
    needs: checkout-deps-code-analysis
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Build with Maven
        run: mvn clean package --batch-mode

      - name: Run tests
        run: mvn test

  docker-build:
    name: Docker Build & Push
    needs: build-test
    runs-on: ubuntu-latest
    timeout-minutes: 20
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/maven-docker-example:latest

  deploy:
    name: Deploy to Kubernetes
    needs: docker-build
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Get kubeconfig
        run: echo "${{ secrets.KUBECONFIG_JSON }}" | base64 --decode > kubeconfig
        env:
          KUBECONFIG_JSON: ${{ secrets.KUBECONFIG_JSON }}

      - name: Set KUBECONFIG env
        run: echo "KUBECONFIG=$PWD/kubeconfig" >> $GITHUB_ENV

      - name: Deploy to cluster
        run: |
          kubectl apply -f k8s/
          kubectl rollout status deployment/maven-docker-example

  monitoring:
    name: Monitoring & Alerting Setup
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Set up Prometheus metrics exporter (if needed)
        run: echo "Prometheus exporter configuration here"

      - name: Azure Monitor integration
        run: echo "Azure Monitor integration here"

      - name: Grafana dashboard config
        run: echo "Grafana dashboard configuration here"
